description: Squash all branches


inputs:
  depth:
    description: Squash amount
    required: false
    default: 0

  author:
    description: Squash author
    required: false
    default: ''

  auto:
    description: Automatic handling
    required: false
    default: ''

  token:
    description: Github token
    required: false
    default: ''


runs:
  using: composite

  steps:
    - if: inputs.auto != ''
      uses: li1ht2ay-3es/gi1-ac2io3s@user-action



    - if: inputs.auto != ''
      uses: li1ht2ay-3es/gi1-ac2io3s@checkout-repo
      with:
        token: ${{ inputs.token }}



    - if: github.event_name == 'push'
      uses: li1ht2ay-3es/gi1-ac2io3s@erase-commit



    - shell: bash
      run: |
        branches=()
        eval "$(git for-each-ref --shell --format='branches+=(%(refname:lstrip=3))' 'refs/remotes/origin')"

        git for-each-ref --shell 'refs/remotes/origin'


        for branch in "${branches[@]}"; do
          if [[ "$branch" == "HEAD" ]]; then
            continue
          fi


          if [[ -z "${{ inputs.author }}" ]]; then
            author=$(git config user.name)
          else
            author=${{ inputs.author }}
          fi


          if [[ "${{ inputs.depth }}" == "" ]]; then
            depth=0
          else
            depth=${{ inputs.depth }}
          fi


          #####


          git checkout $branch --quiet


          if (( $depth == 0 )); then
            git fetch --deepen=500 --quiet
            max_merge=$(git rev-list --count HEAD)


            depth=0
            while (( $depth < $max_merge )); do
              if [[ "$(git log -1 --skip=$depth --pretty=format:'%an')" != "$author" ]]; then
                break
              fi

              depth=$(( $depth+1 ))
            done

            depth=$(( $depth-1 ))

          else
            git fetch --deepen=$depth --quiet
            max_merge=$(git rev-list --count HEAD)


            if (( $depth >= $max_merge )); then
              depth=$(( $max_merge-1 ))
            fi
          fi


          #####


          if (( $depth >= 1 )); then
            git reset --soft HEAD~$depth
            git commit --amend --no-edit

            git push -f origin HEAD:$branch
          fi
        done
