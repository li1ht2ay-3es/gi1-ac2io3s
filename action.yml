description: Install MinGW compiler


inputs:
  arch:
    description: Target platform
    required: false
    default: x64

  os:
    description: WinXP target
    required: false
    default: windows


runs:
  using: composite

  steps:
    - if: runner.os == 'Windows'
      working-directory: ${{ github.action_path }}

      shell: pwsh
      run: |
        if ('${{ inputs.os }}' -ne 'winxp') {
          curl -L -o "mingw_version.txt" "https://github.com/brechtsanders/winlibs_mingw/releases/latest"

          $compiler_file = ( `
            (Get-Content "mingw_version.txt" -Raw) `
             -Split "/brechtsanders/winlibs_mingw/releases/download/(.+).7z`" rel=" `
          )[1]
        }
        else {
          $compiler_file = "11.1.0-12.0.0-8.0.2-r1/winlibs-i686-posix-dwarf-gcc-11.1.0-mingw-w64-8.0.2-r1"

          # https://github.com/brechtsanders/winlibs_mingw/releases/download/11.1.0-12.0.0-8.0.2-r1/winlibs-i686-posix-dwarf-gcc-11.1.0-llvm-12.0.0-mingw-w64-8.0.2-r1.7z
        }


        if ('${{ inputs.arch }}' -eq 'x64') {
          $compiler_file = $compiler_file.replace("i686-posix-dwarf", "x86_64-posix-seh")
          $compiler_path = "mingw64"
        }
        else {
          $compiler_path = "mingw32"
        }


        echo $("`nCompiler: " + "$compiler_file")

        curl.exe -L -o "mingw.7z" `
               ("https://github.com/brechtsanders/winlibs_mingw/releases/download/" + "$compiler_file" + ".7z")
        7z x "mingw.7z" | Out-Null

        cd $compiler_path


        $env:PATH = $pwd.path + ";" + $env:GITHUB_PATH
        $env:PATH = $pwd.path + "/bin;" + $env:GITHUB_PATH

        echo $env:PATH | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

        $env:MINGW_CC = "gcc"
        $env:MINGW_CXX = "g++"

        echo "MINGW_CC=gcc" >> $env:GITHUB_ENV
        echo "MINGW_CXX=g++" >> $env:GITHUB_ENV
        ##  echo "MAKE=mingw32-make" >> $env:GITHUB_ENV



    - if: runner.os == 'Linux'
      shell: bash
      name: "MinGW install"
      run: |
        if [ ${{ inputs.arch }} == 'x86' ]; then
          sudo apt-get install \
            binutils-mingw-w64-i686 \
            g++-mingw-w64-i686 \
            gcc-mingw-w64-i686 \
            mingw-w64-i686-dev

          GCC_t="i686-w64-mingw32-gcc-posix"
          GXX_t="i686-w64-mingw32-g++-posix"
          WINDRES_t="i686-w64-mingw32-windres-posix"

        else
          sudo apt-get install \
            binutils-mingw-w64-x86-64 \
            g++-mingw-w64-x86-64 \
            gcc-mingw-w64-x86-64 \
            mingw-w64-x86-64-dev

          GCC_t="x86_64-w64-mingw32-gcc-posix"
          GXX_t="x86_64-w64-mingw32-g++-posix"
          WINDRES_t="x86_64-w64-mingw32-windres-posix"
        fi


        printf "\n\n"
        echo $($GCC_t --version)

        echo ""
        echo "MINGW_CC=$GCC_t"
        echo "MINGW_CXX=$GXX_t"
        echo "MINGW_WINDRES=$WINDRES_t"


        echo "MINGW_CC=$GCC_t" >> $GITHUB_ENV
        echo "MINGW_CXX=$GXX_t" >> $GITHUB_ENV
        echo "MINGW_WINDRES=$WINDRES_t" >> $GITHUB_ENV
